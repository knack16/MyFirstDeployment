{"version":3,"sources":["component/DataFetching.js","App.js","reportWebVitals.js","index.js"],"names":["DataFetching","useState","qoutes","setQuotes","getQuote","fetch","then","res","json","data","randomNum","Math","floor","random","length","useEffect","className","text","author","class","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAgCeA,EA5BM,WACjB,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAS,WACXC,MAAM,gCACJC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACH,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAASJ,EAAKK,QAC5CX,EAAUM,EAAKC,QAQxB,OALAK,qBAAU,WACNX,MACF,IAIE,gCACI,uDACA,sBAAKY,UAAU,QAAf,UACI,4BAAId,EAAOe,OACX,4BAAIf,EAAOgB,SACX,wBAAQC,MAAM,MAAMC,QAAShB,EAA7B,8BCbDiB,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCISM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.91dcb88d.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport './style.css'\r\n\r\nconst DataFetching = () => {\r\n    const [qoutes,setQuotes]=useState(\"\")\r\n\r\n    const getQuote=()=>{\r\n        fetch(\" https://type.fit/api/quotes\")\r\n         .then((res)=>res.json())\r\n         .then((data)=>{\r\n             let randomNum=Math.floor(Math.random()*data.length)\r\n             setQuotes(data[randomNum]) \r\n         })\r\n    }\r\n    useEffect(()=>{\r\n        getQuote()\r\n    },[])\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Random Quote Genrator</h1>\r\n            <div className=\"quote\">\r\n                <p>{qoutes.text}</p>\r\n                <p>{qoutes.author}</p>\r\n                <button class=\"btn\" onClick={getQuote}>Get Quote</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DataFetching\r\n\r\n\r\n","import React from 'react'\nimport './App.css';\nimport './component/style.css'\nimport DataFetching from './component/DataFetching';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataFetching/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}